---
apiVersion: v1
kind: ConfigMap
metadata:
  name: secret-operator-deployer-manifests
data:
  stackable-secret-operator-scc.yaml: |
    ---
    apiVersion: security.openshift.io/v1
    kind: SecurityContextConstraints
    metadata:
      name: stackable-secret-operator-scc
      annotations:
        kubernetes.io/description: SCC for Stackable secret operator
    allowHostDirVolumePlugin: true
    allowHostIPC: false
    allowHostNetwork: false
    allowHostPID: false
    allowHostPorts: false
    allowPrivilegeEscalation: true
    allowPrivilegedContainer: true # Needed because otherwise we get spec.template.spec.containers[0].volumeMounts.mountPropagation: Forbidden: Bidirectional mount propagation is available only to privileged containers
    allowedCapabilities: null
    defaultAddCapabilities: null
    fsGroup:
      type: RunAsAny
    groups: []
    priority: null
    readOnlyRootFilesystem: false
    requiredDropCapabilities:
    - MKNOD
    runAsUser:
      type: RunAsAny
    seLinuxContext:
      type: MustRunAs
    supplementalGroups:
      type: RunAsAny
    users: []
    volumes:
    - downwardAPI
    - projected
    - hostPath
    - emptyDir

  tls.yaml: |
    ---
    # Source: secret-operator/templates/secretclasses.yaml
    apiVersion: secrets.stackable.tech/v1alpha1
    kind: SecretClass
    metadata:
      name: tls
      labels:
        app.kubernetes.io/name: secret-operator
        app.kubernetes.io/instance: secret-operator
        stackable.tech/vendor: Stackable
        app.kubernetes.io/version: "0.0.0-pr640"
    spec:
      backend:
        autoTls:
          ca:
            secret:
              name: secret-provisioner-tls-ca
              namespace: default
            autoGenerate: true

  csidriver.yaml: |
    ---
    # Source: secret-operator/templates/csidriver.yaml
    apiVersion: storage.k8s.io/v1
    kind: CSIDriver
    metadata:
      name: secrets.stackable.tech
      labels:
        app.kubernetes.io/name: secret-operator
        app.kubernetes.io/instance: secret-operator
        stackable.tech/vendor: Stackable
        app.kubernetes.io/version: "0.0.0-pr640"
    spec:
      attachRequired: false
      podInfoOnMount: true
      fsGroupPolicy: File
      volumeLifecycleModes:
        - Ephemeral
        - Persistent

  storageclass.yaml: |
    ---
    apiVersion: storage.k8s.io/v1
    kind: StorageClass
    metadata:
      name: secrets.stackable.tech
      labels:
        app.kubernetes.io/name: secret-operator
        app.kubernetes.io/instance: secret-operator
        stackable.tech/vendor: Stackable
        app.kubernetes.io/version: "25.7.0"
    provisioner: secrets.stackable.tech

  service.yaml: |
    ---
    # Source: secret-operator/templates/service.yaml
    apiVersion: v1
    kind: Service
    metadata:
      name: secret-operator
      labels:
        app.kubernetes.io/name: secret-operator
        app.kubernetes.io/instance: secret-operator
        stackable.tech/vendor: Stackable
        app.kubernetes.io/version: "0.0.0-pr640"
    spec:
      selector:
        app.kubernetes.io/name: secret-operator
        app.kubernetes.io/instance: secret-operator
        stackable.tech/vendor: Stackable
      ports:
        - name: conversion-webhook
          protocol: TCP
          port: 8443
          targetPort: 8443

  daemonset.yaml: |
    ---
    # Source: secret-operator/templates/daemonset.yaml
    apiVersion: apps/v1
    kind: DaemonSet
    metadata:
      name: secret-operator-daemonset
      labels:
        app.kubernetes.io/name: secret-operator
        app.kubernetes.io/instance: secret-operator
        stackable.tech/vendor: Stackable
        app.kubernetes.io/version: "0.0.0-pr640"
    spec:
      selector:
        matchLabels:
          app.kubernetes.io/name: secret-operator
          app.kubernetes.io/instance: secret-operator
          stackable.tech/vendor: Stackable
      template:
        metadata:
          labels:
            app.kubernetes.io/name: secret-operator
            app.kubernetes.io/instance: secret-operator
            stackable.tech/vendor: Stackable
        spec:
          serviceAccountName: secret-operator-serviceaccount
          securityContext: {}
          containers:
            - name: secret-operator
              securityContext:
                privileged: true
                runAsUser: 0
              image: "oci.stackable.tech/sdp/secret-operator:0.0.0-pr640"
              imagePullPolicy: IfNotPresent
              resources:
                limits:
                  cpu: 100m
                  memory: 128Mi
                requests:
                  cpu: 100m
                  memory: 128Mi
              env:
                # The following env vars are passed as clap (think CLI) arguments to the operator.
                # They are picked up by clap using the structs defied in the operator.
                # (which is turn pulls in https://github.com/stackabletech/operator-rs/blob/main/crates/stackable-operator/src/cli.rs)
                # You can read there about the expected values and purposes.
                - name: CSI_ENDPOINT
                  value: /csi/csi.sock
                - name: PRIVILEGED
                  value: "true"
                # Sometimes products need to know the operator image, e.g. the opa-bundle-builder OPA
                # sidecar uses the operator image.
                - name: OPERATOR_IMAGE
                  # Tilt can use annotations as image paths, but not env variables
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.annotations['internal.stackable.tech/image']
                # Namespace the operator Pod is running in, e.g. used to construct the conversion
                # webhook endpoint.
                - name: OPERATOR_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                # The name of the Kubernetes Service that point to the operator Pod, e.g. used to
                # construct the conversion webhook endpoint.
                - name: OPERATOR_SERVICE_NAME
                  value: secret-operator
                # Operators need to know the node name they are running on, to e.g. discover the
                # Kubernetes domain name from the kubelet API.
                - name: KUBERNETES_NODE_NAME
                  valueFrom:
                    fieldRef:
                      fieldPath: spec.nodeName
              volumeMounts:
                - name: csi
                  mountPath: /csi
                - name: mountpoint
                  mountPath: /var/lib/kubelet/pods
                  mountPropagation: Bidirectional
                - name: tmp
                  mountPath: /tmp
            - name: external-provisioner
              image: "oci.stackable.tech/sdp/sig-storage/csi-provisioner:v5.2.0"
              imagePullPolicy: IfNotPresent
              resources:
                limits:
                  cpu: 100m
                  memory: 128Mi
                requests:
                  cpu: 100m
                  memory: 128Mi
              args:
                - --csi-address=/csi/csi.sock
                - --feature-gates=Topology=true
                - --extra-create-metadata
              volumeMounts:
                - name: csi
                  mountPath: /csi
            - name: node-driver-registrar
              image: "oci.stackable.tech/sdp/sig-storage/csi-node-driver-registrar:v2.13.0"
              imagePullPolicy: IfNotPresent
              resources:
                limits:
                  cpu: 100m
                  memory: 128Mi
                requests:
                  cpu: 100m
                  memory: 128Mi
              args:
                - --csi-address=/csi/csi.sock
                - --kubelet-registration-path=/var/lib/kubelet/plugins/secrets.stackable.tech/csi.sock
              volumeMounts:
                - name: registration-sock
                  mountPath: /registration
                - name: csi
                  mountPath: /csi
          volumes:
            - name: registration-sock
              hostPath:
                # node-driver-registrar appends a driver-unique filename to this path to avoid conflicts
                # see https://github.com/stackabletech/secret-operator/issues/229 for why this path should not be too long
                path: /var/lib/kubelet/plugins_registry
            - name: csi
              hostPath:
                path: /var/lib/kubelet/plugins/secrets.stackable.tech/
            - name: mountpoint
              hostPath:
                path: /var/lib/kubelet/pods/
            - name: tmp
              emptyDir: {}
